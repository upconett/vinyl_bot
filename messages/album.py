from database.models.User import LangTypes


def create_album_template(lang: LangTypes):
    match lang:
        case LangTypes.RU: return '–í—ã–±–µ—Ä–∏ —Ç–∏–ø —à–∞–±–ª–æ–Ω–∞'
        case LangTypes.EN: return 'Choose template'
        

def wait_for_photo(lang: LangTypes):
    match lang:
        case LangTypes.RU:
            return '–£—á—Ç–∏, —á—Ç–æ —Ñ–æ—Ç–æ –∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ —Å–∫–∏–¥—ã–≤–∞—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è X –Ω–∞ Y –∏–Ω–∞—á–µ –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å—Å—è –Ω–µ–∫—Ä–∞—Å–∏–≤–æ'
        case LangTypes.EN:
            return 'Keep in mind that it is advisable to change photo resolutions X to Y, otherwise it may turn out ugly'


def wait_single_photo(lang: LangTypes):
    match lang:
        case LangTypes.RU:
            return '–ü—Ä–∏—à–ª–∏ –º–Ω–µ —Ñ–æ—Ç–æ –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –Ω–∞ –∞–ª—å–±–æ–º–µ\n'
        case LangTypes.EN:
            return 'Send me a photo for album cover\n'
    

def wait_first_photo(lang: LangTypes):
    match lang:
        case LangTypes.RU:
            return '–ü—Ä–∏—à–ª–∏ –º–Ω–µ —Ñ–æ—Ç–æ –¥–ª—è –ª–µ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã\n'
        case LangTypes.EN:
            return 'Send me a photo for the left page of the album\n'


def wait_second_photo(lang: LangTypes):
    match lang:
        case LangTypes.RU:
            return (
                '–¢–µ–ø–µ—Ä—å –ø—Ä–∏—à–ª–∏ –º–Ω–µ —Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–∞–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã\n'
                '–£—á—Ç–∏, —á—Ç–æ —Ñ–æ—Ç–æ –∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ —Å–∫–∏–¥—ã–≤–∞—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è X –Ω–∞ Y –∏–Ω–∞—á–µ –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å—Å—è –Ω–µ–∫—Ä–∞—Å–∏–≤–æ'
            )
        case LangTypes.EN:
            return (
                'Now send me photo for right page of the album\n'
                'Keep in mind that it is advisable to change photo resolutions X to Y, otherwise it may turn out ugly'
            )


def create_album_approve(lang: LangTypes, settings: dict):
    match lang:
        case LangTypes.RU:
            return (
                f'–í—ã–±—Ä–∞–Ω —à–∞–±–ª–æ–Ω: {settings["template"]}\n\n'
                '–°–æ–∑–¥–∞—Ç—å –∞–ª—å–±–æ–º —Å —ç—Ç–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏?'
            )
        case LangTypes.EN:
            return (
                f'Template chose: {settings["template"]}\n\n'
                'Create album with the settings?'
            )


def wrong_photo_format(lang: LangTypes):
    match lang:
        case LangTypes.RU:
            return (
                '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏—Ç–µ —Å–∂–∞—Ç–æ–µ —Ñ–æ—Ç–æ\n'
                '–ò–ª–∏ –≤–≤–µ–¥–∏—Ç–µ /start, —á—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –∞–ª—å–±–æ–º–∞'
            )
        case LangTypes.EN:
            return (
                'Please, send compressed photo\n'
                'Or use /start to cancel album creation'
            )
        

def creation_end(lang: LangTypes, time: int, queue: int):
    match lang:
        case LangTypes.RU:
            return (
                f'–°—É–ø–µ—Ä, –ø–æ–¥–æ–∂–¥–∏ {time} —Å–µ–∫ –∏ —Ç–≤–æ–π –∞–ª—å–±–æ–º –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤\n'
                f'–ü–µ—Ä–µ–¥ —Ç–æ–±–æ–π –≤ –æ—á–µ—Ä–µ–¥–∏ {queue} —á–µ–ª–æ–≤–µ–∫'
            )
        case LangTypes.EN:
            return (
                f'Excellent, wait {time} seconds and your album will be ready\n'
                f'It\'s {queue} people in queue before you'
            )


def no_free_albums(lang: LangTypes):
    match lang:
        case LangTypes.RU:
            return 'üå† –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–µ –∞–ª—å–±–æ–º—ã'
        case LangTypes.EN:
            return 'üå† Subscribe to create new albums'
